<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.codefit.quju.system.model.dao.ShardingAlgorithmDbTableMapper">
    <resultMap id="BaseResultMap" type="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTable">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="logic_table_name" jdbcType="VARCHAR" property="logicTableName"/>
        <result column="sharding_column_name" jdbcType="VARCHAR" property="shardingColumnName"/>
        <result column="sharding_column" jdbcType="VARCHAR" property="shardingColumn"/>
        <result column="sharding_column_value" jdbcType="VARCHAR" property="shardingColumnValue"/>
        <result column="actual_data_node" jdbcType="VARCHAR" property="actualDataNode"/>
        <result column="actual_table_node" jdbcType="VARCHAR" property="actualTableNode"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id,
        logic_table_name,
        sharding_column_name,
        sharding_column,
        sharding_column_value,
        actual_data_node,
        actual_table_node,
        create_name,
        create_time,
        update_name,
        update_time
    </sql>
    <select id="selectByExample" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTableExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from sharding_algorithm_db_table
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sharding_algorithm_db_table
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sharding_algorithm_db_table
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTableExample">
        delete from sharding_algorithm_db_table
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTable">
        insert into sharding_algorithm_db_table (id, logic_table_name, sharding_column_name,
        sharding_column, sharding_column_value, actual_data_node,
        actual_table_node, create_name, create_time,
        update_name, update_time)
        values (#{id,jdbcType=INTEGER}, #{logicTableName,jdbcType=VARCHAR}, #{shardingColumnName,jdbcType=VARCHAR},
        #{shardingColumn,jdbcType=VARCHAR}, #{shardingColumnValue,jdbcType=VARCHAR}, #{actualDataNode,jdbcType=VARCHAR},
        #{actualTableNode,jdbcType=VARCHAR}, #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTable">
        insert into sharding_algorithm_db_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="logicTableName != null">
                logic_table_name,
            </if>
            <if test="shardingColumnName != null">
                sharding_column_name,
            </if>
            <if test="shardingColumn != null">
                sharding_column,
            </if>
            <if test="shardingColumnValue != null">
                sharding_column_value,
            </if>
            <if test="actualDataNode != null">
                actual_data_node,
            </if>
            <if test="actualTableNode != null">
                actual_table_node,
            </if>
            <if test="createName != null">
                create_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateName != null">
                update_name,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="logicTableName != null">
                #{logicTableName,jdbcType=VARCHAR},
            </if>
            <if test="shardingColumnName != null">
                #{shardingColumnName,jdbcType=VARCHAR},
            </if>
            <if test="shardingColumn != null">
                #{shardingColumn,jdbcType=VARCHAR},
            </if>
            <if test="shardingColumnValue != null">
                #{shardingColumnValue,jdbcType=VARCHAR},
            </if>
            <if test="actualDataNode != null">
                #{actualDataNode,jdbcType=VARCHAR},
            </if>
            <if test="actualTableNode != null">
                #{actualTableNode,jdbcType=VARCHAR},
            </if>
            <if test="createName != null">
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateName != null">
                #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTableExample"
            resultType="java.lang.Long">
        select count(*) from sharding_algorithm_db_table
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sharding_algorithm_db_table
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.logicTableName != null">
                logic_table_name = #{record.logicTableName,jdbcType=VARCHAR},
            </if>
            <if test="record.shardingColumnName != null">
                sharding_column_name = #{record.shardingColumnName,jdbcType=VARCHAR},
            </if>
            <if test="record.shardingColumn != null">
                sharding_column = #{record.shardingColumn,jdbcType=VARCHAR},
            </if>
            <if test="record.shardingColumnValue != null">
                sharding_column_value = #{record.shardingColumnValue,jdbcType=VARCHAR},
            </if>
            <if test="record.actualDataNode != null">
                actual_data_node = #{record.actualDataNode,jdbcType=VARCHAR},
            </if>
            <if test="record.actualTableNode != null">
                actual_table_node = #{record.actualTableNode,jdbcType=VARCHAR},
            </if>
            <if test="record.createName != null">
                create_name = #{record.createName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateName != null">
                update_name = #{record.updateName,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sharding_algorithm_db_table
        set id = #{record.id,jdbcType=INTEGER},
        logic_table_name = #{record.logicTableName,jdbcType=VARCHAR},
        sharding_column_name = #{record.shardingColumnName,jdbcType=VARCHAR},
        sharding_column = #{record.shardingColumn,jdbcType=VARCHAR},
        sharding_column_value = #{record.shardingColumnValue,jdbcType=VARCHAR},
        actual_data_node = #{record.actualDataNode,jdbcType=VARCHAR},
        actual_table_node = #{record.actualTableNode,jdbcType=VARCHAR},
        create_name = #{record.createName,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_name = #{record.updateName,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTable">
        update sharding_algorithm_db_table
        <set>
            <if test="logicTableName != null">
                logic_table_name = #{logicTableName,jdbcType=VARCHAR},
            </if>
            <if test="shardingColumnName != null">
                sharding_column_name = #{shardingColumnName,jdbcType=VARCHAR},
            </if>
            <if test="shardingColumn != null">
                sharding_column = #{shardingColumn,jdbcType=VARCHAR},
            </if>
            <if test="shardingColumnValue != null">
                sharding_column_value = #{shardingColumnValue,jdbcType=VARCHAR},
            </if>
            <if test="actualDataNode != null">
                actual_data_node = #{actualDataNode,jdbcType=VARCHAR},
            </if>
            <if test="actualTableNode != null">
                actual_table_node = #{actualTableNode,jdbcType=VARCHAR},
            </if>
            <if test="createName != null">
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateName != null">
                update_name = #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.codefit.quju.system.model.po.ShardingAlgorithmDbTable">
        update sharding_algorithm_db_table
        set logic_table_name = #{logicTableName,jdbcType=VARCHAR},
        sharding_column_name = #{shardingColumnName,jdbcType=VARCHAR},
        sharding_column = #{shardingColumn,jdbcType=VARCHAR},
        sharding_column_value = #{shardingColumnValue,jdbcType=VARCHAR},
        actual_data_node = #{actualDataNode,jdbcType=VARCHAR},
        actual_table_node = #{actualTableNode,jdbcType=VARCHAR},
        create_name = #{createName,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_name = #{updateName,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
