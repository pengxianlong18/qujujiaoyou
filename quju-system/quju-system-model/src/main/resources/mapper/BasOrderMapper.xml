<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.codefit.quju.system.model.dao.BasOrderMapper">
    <resultMap id="BaseResultMap" type="cn.codefit.quju.system.model.po.BasOrder">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="activity_no" jdbcType="VARCHAR" property="activityNo"/>
        <result column="coin" jdbcType="INTEGER" property="coin"/>
        <result column="body" jdbcType="VARCHAR" property="body"/>
        <result column="trade_type" jdbcType="VARCHAR" property="tradeType"/>
        <result column="nonce_str" jdbcType="VARCHAR" property="nonceStr"/>
        <result column="trade_status" jdbcType="VARCHAR" property="tradeStatus"/>
        <result column="recharge_type" jdbcType="INTEGER" property="rechargeType"/>
        <result column="pay_money" jdbcType="VARCHAR" property="payMoney"/>
        <result column="discounts_fee" jdbcType="VARCHAR" property="discountsFee"/>
        <result column="real_fee" jdbcType="VARCHAR" property="realFee"/>
        <result column="trade_no" jdbcType="VARCHAR" property="tradeNo"/>
        <result column="buyer_logon_id" jdbcType="VARCHAR" property="buyerLogonId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="time_end" jdbcType="VARCHAR" property="timeEnd"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="platform" jdbcType="INTEGER" property="platform"/>
        <result column="order_type" jdbcType="INTEGER" property="orderType"/>
        <result column="is_refund" jdbcType="INTEGER" property="isRefund"/>
        <result column="refund_trade_no" jdbcType="VARCHAR" property="refundTradeNo"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id,
        out_trade_no,
        user_id,
        nick_name,
        activity_no,
        coin,
        body,
        trade_type,
        nonce_str,
        trade_status,
        recharge_type,
        pay_money,
        discounts_fee,
        real_fee,
        trade_no,
        buyer_logon_id,
        create_time,
        time_end,
        update_time,
        platform,
        order_type,
        is_refund,
        refund_trade_no
    </sql>
    <select id="selectByExample" parameterType="cn.codefit.quju.system.model.po.BasOrderExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from bas_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bas_order
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from bas_order
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.codefit.quju.system.model.po.BasOrderExample">
        delete from bas_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.codefit.quju.system.model.po.BasOrder">
        insert into bas_order (id, out_trade_no, user_id,
        nick_name, activity_no, coin,
        body, trade_type, nonce_str,
        trade_status, recharge_type, pay_money,
        discounts_fee, real_fee, trade_no,
        buyer_logon_id, create_time, time_end,
        update_time, platform, order_type,
        is_refund, refund_trade_no)
        values (#{id,jdbcType=BIGINT}, #{outTradeNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
        #{nickName,jdbcType=VARCHAR}, #{activityNo,jdbcType=VARCHAR}, #{coin,jdbcType=INTEGER},
        #{body,jdbcType=VARCHAR}, #{tradeType,jdbcType=VARCHAR}, #{nonceStr,jdbcType=VARCHAR},
        #{tradeStatus,jdbcType=VARCHAR}, #{rechargeType,jdbcType=INTEGER}, #{payMoney,jdbcType=VARCHAR},
        #{discountsFee,jdbcType=VARCHAR}, #{realFee,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR},
        #{buyerLogonId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{timeEnd,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP}, #{platform,jdbcType=INTEGER}, #{orderType,jdbcType=INTEGER},
        #{isRefund,jdbcType=INTEGER}, #{refundTradeNo,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.codefit.quju.system.model.po.BasOrder">
        insert into bas_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="outTradeNo != null">
                out_trade_no,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="activityNo != null">
                activity_no,
            </if>
            <if test="coin != null">
                coin,
            </if>
            <if test="body != null">
                body,
            </if>
            <if test="tradeType != null">
                trade_type,
            </if>
            <if test="nonceStr != null">
                nonce_str,
            </if>
            <if test="tradeStatus != null">
                trade_status,
            </if>
            <if test="rechargeType != null">
                recharge_type,
            </if>
            <if test="payMoney != null">
                pay_money,
            </if>
            <if test="discountsFee != null">
                discounts_fee,
            </if>
            <if test="realFee != null">
                real_fee,
            </if>
            <if test="tradeNo != null">
                trade_no,
            </if>
            <if test="buyerLogonId != null">
                buyer_logon_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="timeEnd != null">
                time_end,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="platform != null">
                platform,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="isRefund != null">
                is_refund,
            </if>
            <if test="refundTradeNo != null">
                refund_trade_no,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="outTradeNo != null">
                #{outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="activityNo != null">
                #{activityNo,jdbcType=VARCHAR},
            </if>
            <if test="coin != null">
                #{coin,jdbcType=INTEGER},
            </if>
            <if test="body != null">
                #{body,jdbcType=VARCHAR},
            </if>
            <if test="tradeType != null">
                #{tradeType,jdbcType=VARCHAR},
            </if>
            <if test="nonceStr != null">
                #{nonceStr,jdbcType=VARCHAR},
            </if>
            <if test="tradeStatus != null">
                #{tradeStatus,jdbcType=VARCHAR},
            </if>
            <if test="rechargeType != null">
                #{rechargeType,jdbcType=INTEGER},
            </if>
            <if test="payMoney != null">
                #{payMoney,jdbcType=VARCHAR},
            </if>
            <if test="discountsFee != null">
                #{discountsFee,jdbcType=VARCHAR},
            </if>
            <if test="realFee != null">
                #{realFee,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="buyerLogonId != null">
                #{buyerLogonId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeEnd != null">
                #{timeEnd,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="platform != null">
                #{platform,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=INTEGER},
            </if>
            <if test="isRefund != null">
                #{isRefund,jdbcType=INTEGER},
            </if>
            <if test="refundTradeNo != null">
                #{refundTradeNo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.codefit.quju.system.model.po.BasOrderExample"
            resultType="java.lang.Long">
        select count(*) from bas_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update bas_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.outTradeNo != null">
                out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.activityNo != null">
                activity_no = #{record.activityNo,jdbcType=VARCHAR},
            </if>
            <if test="record.coin != null">
                coin = #{record.coin,jdbcType=INTEGER},
            </if>
            <if test="record.body != null">
                body = #{record.body,jdbcType=VARCHAR},
            </if>
            <if test="record.tradeType != null">
                trade_type = #{record.tradeType,jdbcType=VARCHAR},
            </if>
            <if test="record.nonceStr != null">
                nonce_str = #{record.nonceStr,jdbcType=VARCHAR},
            </if>
            <if test="record.tradeStatus != null">
                trade_status = #{record.tradeStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.rechargeType != null">
                recharge_type = #{record.rechargeType,jdbcType=INTEGER},
            </if>
            <if test="record.payMoney != null">
                pay_money = #{record.payMoney,jdbcType=VARCHAR},
            </if>
            <if test="record.discountsFee != null">
                discounts_fee = #{record.discountsFee,jdbcType=VARCHAR},
            </if>
            <if test="record.realFee != null">
                real_fee = #{record.realFee,jdbcType=VARCHAR},
            </if>
            <if test="record.tradeNo != null">
                trade_no = #{record.tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="record.buyerLogonId != null">
                buyer_logon_id = #{record.buyerLogonId,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.timeEnd != null">
                time_end = #{record.timeEnd,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.platform != null">
                platform = #{record.platform,jdbcType=INTEGER},
            </if>
            <if test="record.orderType != null">
                order_type = #{record.orderType,jdbcType=INTEGER},
            </if>
            <if test="record.isRefund != null">
                is_refund = #{record.isRefund,jdbcType=INTEGER},
            </if>
            <if test="record.refundTradeNo != null">
                refund_trade_no = #{record.refundTradeNo,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update bas_order
        set id = #{record.id,jdbcType=BIGINT},
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=BIGINT},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        activity_no = #{record.activityNo,jdbcType=VARCHAR},
        coin = #{record.coin,jdbcType=INTEGER},
        body = #{record.body,jdbcType=VARCHAR},
        trade_type = #{record.tradeType,jdbcType=VARCHAR},
        nonce_str = #{record.nonceStr,jdbcType=VARCHAR},
        trade_status = #{record.tradeStatus,jdbcType=VARCHAR},
        recharge_type = #{record.rechargeType,jdbcType=INTEGER},
        pay_money = #{record.payMoney,jdbcType=VARCHAR},
        discounts_fee = #{record.discountsFee,jdbcType=VARCHAR},
        real_fee = #{record.realFee,jdbcType=VARCHAR},
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
        buyer_logon_id = #{record.buyerLogonId,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        time_end = #{record.timeEnd,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        platform = #{record.platform,jdbcType=INTEGER},
        order_type = #{record.orderType,jdbcType=INTEGER},
        is_refund = #{record.isRefund,jdbcType=INTEGER},
        refund_trade_no = #{record.refundTradeNo,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.codefit.quju.system.model.po.BasOrder">
        update bas_order
        <set>
            <if test="outTradeNo != null">
                out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="activityNo != null">
                activity_no = #{activityNo,jdbcType=VARCHAR},
            </if>
            <if test="coin != null">
                coin = #{coin,jdbcType=INTEGER},
            </if>
            <if test="body != null">
                body = #{body,jdbcType=VARCHAR},
            </if>
            <if test="tradeType != null">
                trade_type = #{tradeType,jdbcType=VARCHAR},
            </if>
            <if test="nonceStr != null">
                nonce_str = #{nonceStr,jdbcType=VARCHAR},
            </if>
            <if test="tradeStatus != null">
                trade_status = #{tradeStatus,jdbcType=VARCHAR},
            </if>
            <if test="rechargeType != null">
                recharge_type = #{rechargeType,jdbcType=INTEGER},
            </if>
            <if test="payMoney != null">
                pay_money = #{payMoney,jdbcType=VARCHAR},
            </if>
            <if test="discountsFee != null">
                discounts_fee = #{discountsFee,jdbcType=VARCHAR},
            </if>
            <if test="realFee != null">
                real_fee = #{realFee,jdbcType=VARCHAR},
            </if>
            <if test="tradeNo != null">
                trade_no = #{tradeNo,jdbcType=VARCHAR},
            </if>
            <if test="buyerLogonId != null">
                buyer_logon_id = #{buyerLogonId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeEnd != null">
                time_end = #{timeEnd,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="platform != null">
                platform = #{platform,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=INTEGER},
            </if>
            <if test="isRefund != null">
                is_refund = #{isRefund,jdbcType=INTEGER},
            </if>
            <if test="refundTradeNo != null">
                refund_trade_no = #{refundTradeNo,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.codefit.quju.system.model.po.BasOrder">
        update bas_order
        set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=BIGINT},
        nick_name = #{nickName,jdbcType=VARCHAR},
        activity_no = #{activityNo,jdbcType=VARCHAR},
        coin = #{coin,jdbcType=INTEGER},
        body = #{body,jdbcType=VARCHAR},
        trade_type = #{tradeType,jdbcType=VARCHAR},
        nonce_str = #{nonceStr,jdbcType=VARCHAR},
        trade_status = #{tradeStatus,jdbcType=VARCHAR},
        recharge_type = #{rechargeType,jdbcType=INTEGER},
        pay_money = #{payMoney,jdbcType=VARCHAR},
        discounts_fee = #{discountsFee,jdbcType=VARCHAR},
        real_fee = #{realFee,jdbcType=VARCHAR},
        trade_no = #{tradeNo,jdbcType=VARCHAR},
        buyer_logon_id = #{buyerLogonId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        time_end = #{timeEnd,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        platform = #{platform,jdbcType=INTEGER},
        order_type = #{orderType,jdbcType=INTEGER},
        is_refund = #{isRefund,jdbcType=INTEGER},
        refund_trade_no = #{refundTradeNo,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
